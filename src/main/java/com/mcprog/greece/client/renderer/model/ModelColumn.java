// Date: 8/16/2014 10:34:25 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.mcprog.greece.client.renderer.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

/**
 * 
 * @author mcprog
 *
 */
public class ModelColumn extends ModelBase
{
  //fields
    ModelRenderer core;
    ModelRenderer front1;
    ModelRenderer back1;
    ModelRenderer right1;
    ModelRenderer left1;
    ModelRenderer front2l;
    ModelRenderer front2r;
    ModelRenderer back2l;
    ModelRenderer back2r;
    ModelRenderer right2r;
    ModelRenderer left2r;
    ModelRenderer left2l;
    ModelRenderer right2l;
  
  public ModelColumn()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      core = new ModelRenderer(this, 24, 0);
      core.addBox(-5F, 0F, -5F, 10, 16, 10);
      core.setRotationPoint(0F, 8F, 0F);
      core.setTextureSize(64, 32);
      core.mirror = true;
      setRotation(core, 0F, 0F, 0F);
      front1 = new ModelRenderer(this, 0, 0);
      front1.addBox(-4F, 0F, -6F, 8, 16, 1);
      front1.setRotationPoint(0F, 8F, 0F);
      front1.setTextureSize(64, 32);
      front1.mirror = true;
      setRotation(front1, 0F, 0F, 0F);
      back1 = new ModelRenderer(this, 0, 0);
      back1.addBox(-4F, 0F, 5F, 8, 16, 1);
      back1.setRotationPoint(0F, 8F, 0F);
      back1.setTextureSize(64, 32);
      back1.mirror = true;
      setRotation(back1, 0F, 0F, 0F);
      right1 = new ModelRenderer(this, 0, 0);
      right1.addBox(-4F, 0F, -6F, 8, 16, 1);
      right1.setRotationPoint(0F, 8F, 0F);
      right1.setTextureSize(64, 32);
      right1.mirror = true;
      setRotation(right1, 0F, 1.570796F, 0F);
      left1 = new ModelRenderer(this, 0, 0);
      left1.addBox(-4F, 0F, 5F, 8, 16, 1);
      left1.setRotationPoint(0F, 8F, 0F);
      left1.setTextureSize(64, 32);
      left1.mirror = true;
      setRotation(left1, 0F, 1.570796F, 0F);
      front2l = new ModelRenderer(this, 18, 0);
      front2l.addBox(-3F, 0F, -7F, 2, 16, 1);
      front2l.setRotationPoint(0F, 8F, 0F);
      front2l.setTextureSize(64, 32);
      front2l.mirror = true;
      setRotation(front2l, 0F, 0F, 0F);
      front2r = new ModelRenderer(this, 18, 0);
      front2r.addBox(1F, 0F, -7F, 2, 16, 1);
      front2r.setRotationPoint(0F, 8F, 0F);
      front2r.setTextureSize(64, 32);
      front2r.mirror = true;
      setRotation(front2r, 0F, 0F, 0F);
      back2l = new ModelRenderer(this, 18, 0);
      back2l.addBox(1F, 0F, 6F, 2, 16, 1);
      back2l.setRotationPoint(0F, 8F, 0F);
      back2l.setTextureSize(64, 32);
      back2l.mirror = true;
      setRotation(back2l, 0F, 0F, 0F);
      back2r = new ModelRenderer(this, 18, 0);
      back2r.addBox(-3F, 0F, 6F, 2, 16, 1);
      back2r.setRotationPoint(0F, 8F, 0F);
      back2r.setTextureSize(64, 32);
      back2r.mirror = true;
      setRotation(back2r, 0F, 0F, 0F);
      right2r = new ModelRenderer(this, 18, 0);
      right2r.addBox(-7F, 0F, -3F, 1, 16, 2);
      right2r.setRotationPoint(0F, 8F, 0F);
      right2r.setTextureSize(64, 32);
      right2r.mirror = true;
      setRotation(right2r, 0F, 0F, 0F);
      left2r = new ModelRenderer(this, 18, 0);
      left2r.addBox(6F, 0F, 1F, 1, 16, 2);
      left2r.setRotationPoint(0F, 8F, 0F);
      left2r.setTextureSize(64, 32);
      left2r.mirror = true;
      setRotation(left2r, 0F, 0F, 0F);
      left2l = new ModelRenderer(this, 18, 0);
      left2l.addBox(6F, 0F, -3F, 1, 16, 2);
      left2l.setRotationPoint(0F, 8F, 0F);
      left2l.setTextureSize(64, 32);
      left2l.mirror = true;
      setRotation(left2l, 0F, 0F, 0F);
      right2l = new ModelRenderer(this, 18, 0);
      right2l.addBox(-7F, 0F, 1F, 1, 16, 2);
      right2l.setRotationPoint(0F, 8F, 0F);
      right2l.setTextureSize(64, 32);
      right2l.mirror = true;
      setRotation(right2l, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    core.render(f5);
    front1.render(f5);
    back1.render(f5);
    right1.render(f5);
    left1.render(f5);
    front2l.render(f5);
    front2r.render(f5);
    back2l.render(f5);
    back2r.render(f5);
    right2r.render(f5);
    left2r.render(f5);
    left2l.render(f5);
    right2l.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
  }

}
